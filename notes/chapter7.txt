第七章 死锁（Deadlock）

7.1 死锁条件

死锁必须满足以下四个条件：

互斥（Mutual Exclusion）

持有并等待（Hold and Wait）

非抢占（No Preemption）

循环等待（Circular Wait）

7.2 案例分析：双线程与双锁

经典示例：两个线程分别持有一个锁并请求另一个锁时产生死锁。

显示出“循环等待”的根源。

7.3 死锁处理策略

死锁预防（Prevention）：破坏四个条件之一，如固定锁获取顺序。

死锁避免（Avoidance）：如银行家算法，根据资源分配状态预测是否可能死锁。

死锁检测与恢复（Detection and Recovery）：系统周期性检查死锁，并终止或回滚线程恢复系统运行。

7.4 实用建议

保持一致的锁获取顺序。

尽量减少锁持有时间。

使用带超时的锁请求尝试规避死锁。

对于不可避免的死锁场景，可设计系统进行定期检测。